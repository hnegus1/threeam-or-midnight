{"version":3,"sources":["footer.js","quiz.js","index.js"],"names":["Footer","class","href","Quiz","props","state","songNumber","Math","floor","random","questions","length","e","this","setState","Button","onClick","nextQuestion","React","Component","Question","number","name","artist","time","url","reason","answerText","buttonsDisabled","oldProps","newProps","title","src","width","height","frameborder","allowtransparency","allow","variant","answerQuestion","disabled","ReactDOM","render","document","getElementById"],"mappings":"kgNAEO,SAASA,IACZ,OAAO,yBAAKC,MAAM,UAAS,2DAAgC,uBAAGC,KAAK,kDAAR,0BAAhC,0IAAuP,uBAAGA,KAAK,6JAAR,qB,sDCCzQC,EAAb,YACI,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTC,WAAYC,KAAKC,MAAMD,KAAKE,SAAWC,EAAUC,SAHvC,EADtB,0EAQiBC,GACTC,KAAKC,SAAS,CAACR,WAAYC,KAAKC,MAAMD,KAAKE,SAAWC,EAAUC,YATxE,+BAYa,IAAD,OACJ,OACI,6BACI,yBAAKV,MAAM,SAAQ,iDACnB,yBAAKA,MAAM,YAAW,kBAAC,EAAD,CAAUK,WAAYO,KAAKR,MAAMC,cACvD,yBAAKL,MAAM,gBAAe,kBAACc,EAAA,EAAD,CAAQC,QAAS,SAACJ,GAAD,OAAO,EAAKK,aAAaL,KAA1C,uBAjB1C,GAA0BM,IAAMC,WAuBnBC,EAAb,YACI,WAAYhB,GAAO,IAAD,sBAEd,IAAIE,GADJ,4CAAMF,KACgBA,MAAME,WAFd,OAGd,EAAKD,MAAQ,CACTgB,OAAQf,EACRgB,KAAMZ,EAAUJ,GAAV,KACNiB,OAAQb,EAAUJ,GAAV,OACRkB,KAAMd,EAAUJ,GAAV,KACNmB,IAAK,wCAA0Cf,EAAUJ,GAAV,IAC/CoB,OAAQhB,EAAUJ,GAAV,OACRqB,WAAY,GACZC,iBAAiB,GAXP,EADtB,gFAgBuBC,GACf,IAAMC,EAAWjB,KAAKT,MACtB,GAAGyB,EAASvB,aAAewB,EAASxB,WAAW,CAC3C,IAAIA,EAAawB,EAASxB,WAC1BO,KAAKC,SACD,CACIO,OAAQf,EACRgB,KAAMZ,EAAUJ,GAAV,KACNiB,OAAQb,EAAUJ,GAAV,OACRkB,KAAMd,EAAUJ,GAAV,KACNmB,IAAK,wCAA0Cf,EAAUJ,GAAV,IAC/CoB,OAAQhB,EAAUJ,GAAV,OACRqB,WAAY,GACZC,iBAAiB,OA7BrC,+BAmCa,IAAD,OACJ,OACI,6BACI,yBAAK3B,MAAM,iBAAgB,oCAAUY,KAAKR,MAAMiB,KAArB,OAA+BT,KAAKR,MAAMkB,OAA1C,8CAC3B,yBAAKtB,MAAM,cAAa,4BAAQ8B,MAAM,OAAOC,IAAKnB,KAAKR,MAAMoB,IAAKQ,MAAM,MAAMC,OAAO,KAAKC,YAAY,IAAIC,kBAAkB,OAAOC,MAAM,qBACzI,yBAAKpC,MAAM,mBACP,kBAACc,EAAA,EAAD,CACIuB,QAAQ,UACRtB,QAAS,SAACJ,GAAD,OAAO,EAAK2B,eAAe3B,EAAG,aACvCV,KAAK,IACLsC,SAAU3B,KAAKR,MAAMuB,iBAJzB,aAQJ,yBAAK3B,MAAM,gBACP,kBAACc,EAAA,EAAD,CACIuB,QAAQ,OACRtB,QAAS,SAACJ,GAAD,OAAO,EAAK2B,eAAe3B,EAAG,UACvCV,KAAK,IACLsC,SAAU3B,KAAKR,MAAMuB,iBAJzB,QAQJ,yBAAK3B,MAAM,eAAc,2BAAIY,KAAKR,MAAMsB,gBA1DxD,qCA+DmBf,EAAGY,GACXX,KAAKR,MAAMmB,OAASA,EACnBX,KAAKC,SACD,CACIa,WAAY,mBAAqBd,KAAKR,MAAMqB,OAC5CE,iBAAiB,IAIzBf,KAAKC,SACD,CACIa,WAAY,uBAAyBd,KAAKR,MAAMqB,OAChDE,iBAAiB,QA3ErC,GAA8BV,IAAMC,W,YCXpCsB,IAASC,OACL,mBAVJ,WACI,OACI,6BACI,yBAAKzC,MAAM,gBAAe,kBAAC,EAAD,OAC1B,yBAAKA,MAAM,UAAS,kBAACD,EAAD,UAM5B,MACA2C,SAASC,eAAe,W","file":"static/js/main.1e2ad224.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function Footer(){\r\n    return <div class='footer'><p>Made with React. Inspired by <a href='https://pixelastic.github.io/pokemonorbigdata/'>Pok√©mon or Big Data</a> and the desire to follow really stupid ideas through to the end. If the song doesn't play, just right click and click 'reload frame'. <a href='https://github.com/hnegus1/threeam-or-midnight/issues/new?assignees=hnegus1&labels=enhancement&template=song-request.md&title=Song+Request+-+<TITLE+HERE>'>Request a song.</a></p></div>\r\n}","import React from 'react';\r\nimport questions from './questions.json';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nexport class Quiz extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            songNumber: Math.floor(Math.random() * questions.length)\r\n        }\r\n    }\r\n\r\n    nextQuestion(e){\r\n        this.setState({songNumber: Math.floor(Math.random() * questions.length)})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div class='title'><h1>3am or Midnight?</h1></div>\r\n                <div class='question'><Question songNumber={this.state.songNumber}/></div>\r\n                <div class='new-question'><Button onClick={(e) => this.nextQuestion(e)}>Next Question</Button></div>\r\n            </div>   \r\n        );\r\n    }     \r\n}\r\n\r\nexport class Question extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        var songNumber = this.props.songNumber;\r\n        this.state = {\r\n            number: songNumber,\r\n            name: questions[songNumber]['name'],\r\n            artist: questions[songNumber]['artist'],\r\n            time: questions[songNumber]['time'],\r\n            url: \"https://open.spotify.com/embed/track/\" + questions[songNumber]['url'],\r\n            reason: questions[songNumber]['reason'],\r\n            answerText: '',\r\n            buttonsDisabled: false\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(oldProps){\r\n        const newProps = this.props\r\n        if(oldProps.songNumber !== newProps.songNumber){\r\n            var songNumber = newProps.songNumber\r\n            this.setState(\r\n                {\r\n                    number: songNumber,\r\n                    name: questions[songNumber]['name'],\r\n                    artist: questions[songNumber]['artist'],\r\n                    time: questions[songNumber]['time'],\r\n                    url: \"https://open.spotify.com/embed/track/\" + questions[songNumber]['url'],\r\n                    reason: questions[songNumber]['reason'],\r\n                    answerText: '',\r\n                    buttonsDisabled: false\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div class='question-text'><h3>Does {this.state.name} by {this.state.artist} feel like a Midnight song or a 3AM song?</h3></div>\r\n                <div class='song-embed'><iframe title=\"song\" src={this.state.url} width=\"300\" height=\"80\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe></div>\r\n                <div class='button-midnight'>\r\n                    <Button \r\n                        variant='warning' \r\n                        onClick={(e) => this.answerQuestion(e, 'midnight')} \r\n                        href='#' \r\n                        disabled={this.state.buttonsDisabled}>\r\n                            Midnight\r\n                    </Button>\r\n                </div>\r\n                <div class='button-three'>\r\n                    <Button \r\n                        variant='dark' \r\n                        onClick={(e) => this.answerQuestion(e, 'three')} \r\n                        href='#' \r\n                        disabled={this.state.buttonsDisabled}>\r\n                            3AM\r\n                    </Button>\r\n                </div>\r\n                <div class='answer-text'><p>{this.state.answerText}</p></div>                \r\n            </div>\r\n        )\r\n    }\r\n\r\n    answerQuestion(e, time){\r\n        if(this.state.time === time){\r\n            this.setState(\r\n                {\r\n                    answerText: \"Agreed! Because \" + this.state.reason,\r\n                    buttonsDisabled: true,\r\n                }\r\n            );\r\n        }else{\r\n            this.setState(\r\n                {\r\n                    answerText: \"I disagree! Because \" + this.state.reason,\r\n                    buttonsDisabled: true,\r\n                }\r\n            );   \r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Footer} from './footer.js';\r\nimport {Quiz} from './quiz.js';\r\nimport './style.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nfunction Index(){\r\n    return(\r\n        <div>\r\n            <div class='main-content'><Quiz/></div>\r\n            <div class='footer'><Footer/></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nReactDOM.render(\r\n    <Index/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}